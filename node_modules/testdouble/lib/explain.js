// Generated by CoffeeScript 1.10.0
(function() {
  var _, callDescription, callsStore, store, stringifyArgs, stringifyName, stubbingDescription, stubbingsStore;

  _ = require('lodash');

  store = require('./store');

  callsStore = require('./store/calls');

  stubbingsStore = require('./store/stubbings');

  stringifyArgs = require('./stringify-args');

  module.exports = function(testDouble) {
    var calls, stubs;
    calls = callsStore["for"](testDouble);
    stubs = stubbingsStore["for"](testDouble);
    return {
      callCount: calls.length,
      calls: calls,
      description: ("This test double " + (stringifyName(testDouble)) + "has " + stubs.length + " stubbings and " + calls.length + " invocations.") + stubbingDescription(stubs) + callDescription(calls)
    };
  };

  stubbingDescription = function(stubs) {
    if (stubs.length === 0) {
      return "";
    }
    return _.reduce(stubs, function(desc, stub) {
      return desc + ("\n  - when called with `(" + (stringifyArgs(stub.args)) + ")`, then return " + (stringifyArgs(stub.stubbedValues, ", then ", "`")) + ".");
    }, "\n\nStubbings:");
  };

  callDescription = function(calls) {
    if (calls.length === 0) {
      return "";
    }
    return _.reduce(calls, function(desc, call) {
      return desc + ("\n  - called with `(" + (stringifyArgs(call.args)) + ")`.");
    }, "\n\nInvocations:");
  };

  stringifyName = function(testDouble) {
    var name;
    if (name = store["for"](testDouble).name) {
      return "`" + name + "` ";
    } else {
      return "";
    }
  };

}).call(this);
