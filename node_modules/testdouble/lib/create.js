// Generated by CoffeeScript 1.10.0
(function() {
  var _, calls, createTestDouble, createTestDoubleFunction, createTestDoublesForEntireType, store, stubbings,
    slice = [].slice;

  _ = require('lodash');

  store = require('./store');

  calls = require('./store/calls');

  stubbings = require('./store/stubbings');

  module.exports = function(nameOrType) {
    if ((nameOrType != null ? nameOrType.prototype : void 0) != null) {
      return createTestDoublesForEntireType(nameOrType);
    } else {
      return createTestDouble(nameOrType);
    }
  };

  createTestDouble = function(name) {
    return _.tap(createTestDoubleFunction(), function(testDouble) {
      if (name != null) {
        return store["for"](testDouble).name = name;
      }
    });
  };

  createTestDoubleFunction = function() {
    var testDouble;
    return testDouble = function() {
      var args;
      args = 1 <= arguments.length ? slice.call(arguments, 0) : [];
      calls.log(testDouble, args, this);
      return stubbings.get(testDouble, args);
    };
  };

  createTestDoublesForEntireType = function(type) {
    return _.reduce(Object.getOwnPropertyNames(type.prototype), function(memo, name) {
      memo[name] = _.isFunction(type.prototype[name]) ? createTestDouble(type.name + "#" + name) : type.prototype[name];
      return memo;
    }, {});
  };

}).call(this);
