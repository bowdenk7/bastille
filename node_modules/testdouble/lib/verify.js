// Generated by CoffeeScript 1.10.0
(function() {
  var _, callsStore, invocationSummary, store, stringifyArgs, stringifyName, unsatisfiedErrorMessage;

  _ = require('lodash');

  store = require('./store');

  callsStore = require('./store/calls');

  stringifyArgs = require('./stringify-args');

  module.exports = function() {
    var last;
    if (last = callsStore.pop()) {
      if (callsStore.wasInvoked(last.testDouble, last.args)) {

      } else {
        throw new Error(unsatisfiedErrorMessage(last.testDouble, last.args));
      }
    } else {
      throw new Error("No test double invocation detected for `verify()`.\n\n  Usage:\n    verify(myTestDouble('foo'))");
    }
  };

  unsatisfiedErrorMessage = function(testDouble, args) {
    return ("Unsatisfied verification on test double" + (stringifyName(testDouble)) + ".\n\n  Wanted:\n    - called with `(" + (stringifyArgs(args)) + ")`.") + invocationSummary(testDouble);
  };

  invocationSummary = function(testDouble) {
    var calls;
    calls = callsStore["for"](testDouble);
    if (calls.length === 0) {
      return "\n\n  But there were no invocations of the test double.";
    } else {
      return _.reduce(calls, function(desc, call) {
        return desc + ("\n    - called with `(" + (stringifyArgs(call.args)) + ")`.");
      }, "\n\n  But was actually called:");
    }
  };

  stringifyName = function(testDouble) {
    var name;
    if (name = store["for"](testDouble).name) {
      return " `" + name + "`";
    } else {
      return "";
    }
  };

}).call(this);
